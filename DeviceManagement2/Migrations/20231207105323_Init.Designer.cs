// <auto-generated />
using System;
using DeviceManagement2.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeviceManagement2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231207105323_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeviceManagement2.Models.Equipment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodeOfManagement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LendingFromOutsiderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LendingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecificationId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("SupplierId1")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("YearSupply")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LendingFromOutsiderId");

                    b.HasIndex("LendingId");

                    b.HasIndex("SpecificationId")
                        .IsUnique();

                    b.HasIndex("SupplierId")
                        .IsUnique();

                    b.HasIndex("SupplierId1");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("DeviceManagement2.Models.EquipmentInstance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentInstances");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Lending", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Borrower")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LendingedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Lendings");
                });

            modelBuilder.Entity("DeviceManagement2.Models.LendingFromOutsider", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Borrower")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LendingedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanCouponCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("LendingFromOutsiders");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Specifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Addresses")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Equipment", b =>
                {
                    b.HasOne("DeviceManagement2.Models.LendingFromOutsider", null)
                        .WithMany("Equipment")
                        .HasForeignKey("LendingFromOutsiderId")
                        .IsRequired();

                    b.HasOne("DeviceManagement2.Models.Lending", null)
                        .WithMany("Equipment")
                        .HasForeignKey("LendingId")
                        .IsRequired();

                    b.HasOne("DeviceManagement2.Models.Specifications", "Specifications")
                        .WithOne()
                        .HasForeignKey("DeviceManagement2.Models.Equipment", "SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeviceManagement2.Models.Supplier", "Supplier")
                        .WithOne()
                        .HasForeignKey("DeviceManagement2.Models.Equipment", "SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeviceManagement2.Models.Supplier", null)
                        .WithMany("Equipment")
                        .HasForeignKey("SupplierId1")
                        .IsRequired();

                    b.Navigation("Specifications");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Lending", b =>
                {
                    b.HasOne("DeviceManagement2.Models.Project", "Project")
                        .WithOne()
                        .HasForeignKey("DeviceManagement2.Models.Lending", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DeviceManagement2.Models.LendingFromOutsider", b =>
                {
                    b.HasOne("DeviceManagement2.Models.Project", "Project")
                        .WithOne()
                        .HasForeignKey("DeviceManagement2.Models.LendingFromOutsider", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Lending", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DeviceManagement2.Models.LendingFromOutsider", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DeviceManagement2.Models.Supplier", b =>
                {
                    b.Navigation("Equipment");
                });
#pragma warning restore 612, 618
        }
    }
}
